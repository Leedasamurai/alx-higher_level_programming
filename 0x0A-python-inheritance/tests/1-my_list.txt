# How to use 1-my_list.txt

## Introduction

This library provides a simple class named `MyList`, which inherits from the built-in `list` class and includes a method called `print_sorted()`. This method prints the elements of the list in ascending order.

## Usage Examples

### Numbers

#### With Positive Integers

```python
>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> isinstance(my_list, list)
>>> my_list.clear()
>>> my_list.append(5)
>>> my_list.append(5)
>>> my_list.append(5)
>>> my_list.append(5)
>>> my_list.append(5)
>>> my_list.print_sorted()
[5, 5, 5, 5, 5]
True
>>> my_list.print_sorted()
[]

>>> my_list.append(7)
>>> my_list.append(3)
>>> my_list.append(1)
>>> my_list.print_sorted()
[1, 3, 7]

>>> my_list.append(0)
>>> my_list.print_sorted()
[0, 1, 3, 7]

>>> my_list.append(-15)
>>> my_list.print_sorted()
[-15, 0, 1, 3, 7]

>>> my_list.append(-15)
>>> my_list.append(0)
>>> my_list.append(7)
>>> my_list.print_sorted()
[-15, -15, 0, 0, 1, 3, 7, 7]

>>> my_list.append(10000000000000000000000000000000000000000000)
>>> my_list.print_sorted()
[5, 5, 5, 5, 5, 10000000000000000000000000000000000000000000]

>>> my_list.append(None)
>>> my_list.print_sorted()
Traceback (most recent call last):
  TypeError: unorderable types: NoneType() < int()
>>> my_list.append(NULL)
Traceback (most recent call last):
  NameError: name 'NULL' is not defined
